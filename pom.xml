<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.apache</groupId>
    <artifactId>apache</artifactId>
    <version>23</version>
  </parent>

  <artifactId>flink-ml-parent</artifactId>
  <groupId>org.apache.flink</groupId>
  <name>Flink ML</name>
  <version>2.2-SNAPSHOT</version>
  <packaging>pom</packaging>

  <url>http://flink.apache.org</url>
  <inceptionYear>2019</inceptionYear>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <url>https://github.com/apache/flink-ml</url>
    <connection>git@github.com:apache/flink-ml.git</connection>
    <developerConnection>scm:git:https://gitbox.apache.org/repos/asf/flink-ml.git</developerConnection>
  </scm>

  <modules>
    <module>flink-ml-core</module>
    <module>flink-ml-iteration</module>
    <module>flink-ml-lib</module>
    <module>flink-ml-tests</module>
    <module>flink-ml-uber</module>
    <module>flink-ml-benchmark</module>
    <module>flink-ml-dist</module>
    <module>flink-ml-examples</module>
    <module>flink-ml-python</module>
  </modules>

  <properties>
    <flink.shaded.version>15.0</flink.shaded.version>
    <jackson.version>2.12.4</jackson.version>
    <jackson-databind.version>2.12.6.1</jackson-databind.version>
    <target.java.version>1.8</target.java.version>
    <spotless.version>2.4.2</spotless.version>
    <slf4j.version>1.7.36</slf4j.version>
    <statefun.version>3.2.0</statefun.version>
    <log4j.version>2.17.2</log4j.version>
    <junit.version>4.13.2</junit.version>
    <flink.forkCount>1C</flink.forkCount>
    <flink.reuseForks>true</flink.reuseForks>
    <flink.version>1.15.1</flink.version>
    <zookeeper.version>3.6.3</zookeeper.version>
    <hadoop.version>2.10.1</hadoop.version>

    <!-- Can be set to any value to reproduce a specific build. -->
    <test.randomization.seed/>
    <test.unit.pattern>**/*Test.*</test.unit.pattern>
  </properties>


  <dependencies>
    <!-- Logging API -->

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <!-- test dependencies -->

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <type>jar</type>
      <scope>test</scope>
    </dependency>

    <!-- tests will have log4j as the default logging framework available -->

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <!-- API bridge between log4j 1 and 2 -->
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-1.2-api</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.apache.flink</groupId>
        <artifactId>flink-shaded-jackson</artifactId>
        <version>${jackson.version}-${flink.shaded.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.flink</groupId>
        <artifactId>flink-shaded-zookeeper-3</artifactId>
        <version>${zookeeper.version}-${flink.shaded.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.flink</groupId>
        <artifactId>flink-connector-files</artifactId>
        <version>${flink.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.zookeeper</groupId>
        <artifactId>zookeeper</artifactId>
        <version>${zookeeper.version}</version>
        <exclusions>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
          <!-- Netty is only needed for ZK servers, not clients -->
          <exclusion>
            <groupId>io.netty</groupId>
            <artifactId>netty</artifactId>
          </exclusion>
          <!-- jline is optional for ZK console shell -->
          <exclusion>
            <groupId>jline</groupId>
            <artifactId>jline</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-slf4j-impl</artifactId>
        <version>${log4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-api</artifactId>
        <version>${log4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>${log4j.version}</version>
      </dependency>

      <dependency>
        <!-- API bridge between log4j 1 and 2 -->
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-1.2-api</artifactId>
        <version>${log4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.flink</groupId>
        <artifactId>flink-test-utils-junit</artifactId>
        <version>${flink.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.flink</groupId>
        <artifactId>flink-table-runtime</artifactId>
        <version>${flink.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.flink</groupId>
        <artifactId>flink-table-planner-loader</artifactId>
        <version>${flink.version}</version>
        <scope>test</scope>
      </dependency>
      <!-- hdfs is required for the data cache test -->
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-hdfs</artifactId>
        <scope>test</scope>
        <version>${hadoop.version}</version>
        <exclusions>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-common</artifactId>
        <scope>test</scope>
        <version>${hadoop.version}</version>
        <exclusions>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
          <exclusion>
            <!-- This dependency is no longer shipped with the JDK since Java 9.-->
            <groupId>jdk.tools</groupId>
            <artifactId>jdk.tools</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-hdfs</artifactId>
        <scope>test</scope>
        <type>test-jar</type>
        <version>${hadoop.version}</version>
        <exclusions>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-common</artifactId>
        <scope>test</scope>
        <type>test-jar</type>
        <version>${hadoop.version}</version>
        <exclusions>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
          <exclusion>
            <!-- This dependency is no longer shipped with the JDK since Java 9.-->
            <groupId>jdk.tools</groupId>
            <artifactId>jdk.tools</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-minicluster</artifactId>
        <scope>test</scope>
        <version>${hadoop.version}</version>
        <exclusions>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
          <exclusion>
            <!-- This dependency is no longer shipped with the JDK since Java 9.-->
            <groupId>jdk.tools</groupId>
            <artifactId>jdk.tools</artifactId>
          </exclusion>

          <exclusion>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson-databind.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <profiles>
    <!--
      We're reusing the apache-release build profile defined in the Apache Parent POM,
      with one exclusion: do not run the source-release-assembly execution goal.
      We have our own scripts to create the source release, which correctly excludes
      binaries from distribution tarball.
      The script can be found under tools/releasing/create_source_release.sh.
    -->
    <profile>
      <id>apache-release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>org.apache.apache.resources</groupId>
                <artifactId>apache-source-release-assembly-descriptor</artifactId>
                <version>1.0.6</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>source-release-assembly</id>
                <!-- disable the execution -->
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version><!--$NO-MVN-MAN-VER$-->
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.rat</groupId>
        <artifactId>apache-rat-plugin</artifactId>
        <version>0.13</version>
        <inherited>false</inherited>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <excludeSubProjects>false</excludeSubProjects>
          <numUnapprovedLicenses>0</numUnapprovedLicenses>
          <licenses>
            <!-- Enforce this license:
              Licensed to the Apache Software Foundation (ASF) under one
              or more contributor license agreements.  See the NOTICE file
              distributed with this work for additional information
              regarding copyright ownership.  The ASF licenses this file
              to you under the Apache License, Version 2.0 (the
              "License"); you may not use this file except in compliance
              with the License.  You may obtain a copy of the License at
                http://www.apache.org/licenses/LICENSE-2.0
              Unless required by applicable law or agreed to in writing,
              software distributed under the License is distributed on an
              "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
              KIND, either express or implied.  See the License for the
              specific language governing permissions and limitations
              under the License.
            -->
            <license implementation="org.apache.rat.analysis.license.SimplePatternBasedLicense">
              <licenseFamilyCategory>AL2 </licenseFamilyCategory>
              <licenseFamilyName>Apache License 2.0</licenseFamilyName>
              <notes />
              <patterns>
                <pattern>Licensed to the Apache Software Foundation (ASF) under one</pattern>
              </patterns>
            </license>
          </licenses>
          <licenseFamilies>
            <licenseFamily implementation="org.apache.rat.license.SimpleLicenseFamily">
              <familyName>Apache License 2.0</familyName>
            </licenseFamily>
          </licenseFamilies>
          <excludes>
            <!-- Additional files like .gitignore etc.-->
            <exclude>**/.*/**</exclude>
            <exclude>**/*.prefs</exclude>
            <exclude>**/*.log</exclude>
            <!-- Administrative files in the main trunk. -->
            <exclude>**/README.md</exclude>
            <exclude>**/CODE_OF_CONDUCT.md</exclude>
            <exclude>.github/**</exclude>
            <!-- IDE files. -->
            <exclude>**/*.iml</exclude>
            <exclude>**/.idea/**</exclude>
            <!-- Generated content -->
            <exclude>**/target/**</exclude>
            <exclude>**/scalastyle-output.xml</exclude>
            <exclude>docs/static/font-awesome/**</exclude>
            <exclude>docs/resources/**</exclude>
            <exclude>docs/public/**</exclude>
            <exclude>docs/themes/book/**</exclude>
            <exclude>docs/assets/github.css</exclude>
            <exclude>docs/static/js/anchor.min.js</exclude>
            <!-- Bundled license files -->
            <exclude>**/LICENSE*</exclude>
            <!-- artifacts created during release process -->
            <exclude>release/**</exclude>
            <!-- resource files used in production code -->
            <exclude>**/src/main/resources/**</exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
      </plugin>

      <!--surefire for unit tests and integration tests-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.1</version>
        <configuration>
          <forkCount>${flink.forkCount}</forkCount>
          <reuseForks>${flink.reuseForks}</reuseForks>
          <trimStackTrace>false</trimStackTrace>
          <systemPropertyVariables>
            <forkNumber>0${surefire.forkNumber}</forkNumber>
            <project.basedir>${project.basedir}</project.basedir>
            <!--suppress MavenModelInspection -->
            <test.randomization.seed>${test.randomization.seed}</test.randomization.seed>
          </systemPropertyVariables>
          <argLine>-Xms256m -Xmx2048m -Dmvn.forkNumber=${surefire.forkNumber} -XX:+UseG1GC</argLine>
        </configuration>
        <executions>
          <!--execute all the unit tests-->
          <execution>
            <id>default-test</id>
            <phase>test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <includes>
                <include>${test.unit.pattern}</include>
              </includes>
            </configuration>
          </execution>
          <!--execute all the integration tests-->
          <execution>
            <id>integration-tests</id>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <includes>
                <include>**/*.*</include>
              </includes>
              <excludes>
                <exclude>${test.unit.pattern}</exclude>
              </excludes>
              <reuseForks>false</reuseForks>
            </configuration>
          </execution>
        </executions>
      </plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <!-- enforce at least mvn version 3.1.1 (see FLINK-12447) -->
                  <version>[3.1.1,)</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>${target.java.version}</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>ban-unsafe-snakeyaml</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <bannedDependencies>
                  <excludes>
                    <exclude>org.yaml:snakeyaml:(,1.26]</exclude>
                  </excludes>
                  <includes>
                    <!-- Snakeyaml is pulled in by many modules without using it in production,
                      so there's no benefit in us investing time into bumping these. -->
                    <include>org.yaml:snakeyaml:(,1.26]:*:test</include>
                  </includes>
                </bannedDependencies>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>ban-unsafe-jackson</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <bannedDependencies>
                  <excludes>
                    <exclude>com.fasterxml.jackson*:*:(,2.12.0]</exclude>
                  </excludes>
                </bannedDependencies>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>forbid-log4j-1</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <bannedDependencies>
                  <excludes>
                    <exclude>log4j:log4j</exclude>
                    <exclude>org.slf4j:slf4j-log4j12</exclude>
                  </excludes>
                </bannedDependencies>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>dependency-convergence</id>
            <!-- disabled by default as it interacts badly with shade-plugin -->
            <phase>none</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <dependencyConvergence/>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <id>shade-flink</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <shadeTestJar>true</shadeTestJar>
              <shadedArtifactAttached>false</shadedArtifactAttached>
              <createDependencyReducedPom>true</createDependencyReducedPom>
              <dependencyReducedPomLocation>${project.basedir}/target/dependency-reduced-pom.xml</dependencyReducedPomLocation>
              <!-- Filters MUST be appended; merging filters does not work properly, see MSHADE-305 -->
              <filters combine.children="append">
                <!-- Globally exclude log4j.properties from our JAR files. -->
                <filter>
                  <artifact>*</artifact>
                  <excludes>
                    <exclude>log4j.properties</exclude>
                    <exclude>log4j2.properties</exclude>
                    <exclude>log4j-test.properties</exclude>
                    <exclude>log4j2-test.properties</exclude>
                  </excludes>
                </filter>
                <!-- drop entries into META-INF and NOTICE files for the dummy artifact -->
                <filter>
                  <artifact>org.apache.flink:force-shading</artifact>
                  <excludes>
                    <exclude>**</exclude>
                  </excludes>
                </filter>
                <!-- io.netty:netty brings its own LICENSE.txt which we don't need -->
                <filter>
                  <artifact>io.netty:netty</artifact>
                  <excludes>
                    <exclude>META-INF/LICENSE.txt</exclude>
                  </excludes>
                </filter>
              </filters>
              <artifactSet>
                <includes>
                  <!-- Unfortunately, the next line is necessary for now to force the execution
                  of the Shade plugin upon all sub modules. This will generate effective poms,
                  i.e. poms which do not contain properties which are derived from this root pom.
                  In particular, the Scala version properties are defined in the root pom and without
                  shading, the root pom would have to be Scala suffixed and thereby all other modules.
                  -->
                  <include>org.apache.flink:force-shading</include>
                </includes>
              </artifactSet>
              <transformers combine.children="append">
                <!-- The service transformer is needed to merge META-INF/services files -->
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                <!-- The ApacheNoticeResourceTransformer collects and aggregates NOTICE files -->
                <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer">
                  <projectName>Apache Flink</projectName>
                  <encoding>UTF-8</encoding>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
          <configuration>
            <source>${target.java.version}</source>
            <target>${target.java.version}</target>
            <!-- The semantics of this option are reversed, see MCOMPILER-209. -->
            <useIncrementalCompilation>false</useIncrementalCompilation>
            <compilerArgs>
              <!-- Prevents recompilation due to missing package-info.class, see MCOMPILER-205 -->
              <arg>-Xpkginfo:always</arg>
            </compilerArgs>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>2.17</version>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <!-- Note: match version with docs/flinkDev/ide_setup.md -->
              <version>8.14</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>validate</id>
              <phase>validate</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <suppressionsLocation>/tools/maven/suppressions.xml</suppressionsLocation>
            <includeTestSourceDirectory>true</includeTestSourceDirectory>
            <configLocation>/tools/maven/checkstyle.xml</configLocation>
            <logViolationsToConsole>true</logViolationsToConsole>
            <failOnViolation>true</failOnViolation>
          </configuration>
        </plugin>

        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>${spotless.version}</version>
          <configuration>
            <java>
              <googleJavaFormat>
                <version>1.7</version>
                <style>AOSP</style>
              </googleJavaFormat>

              <!-- \# refers to the static imports -->
              <importOrder>
                <order>org.apache.flink,org.apache.flink.shaded,,javax,java,scala,\#</order>
              </importOrder>

              <removeUnusedImports />
            </java>
          </configuration>
          <executions>
            <execution>
              <id>spotless-check</id>
              <phase>validate</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>


        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.9.1</version><!--$NO-MVN-MAN-VER$-->
          <configuration>
            <quiet>true</quiet>
            <detectOfflineLinks>false</detectOfflineLinks>
            <additionalJOptions combine.children="append">
              <additionalJOption>-Xdoclint:none</additionalJOption>
            </additionalJOptions>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.0.0-M1</version>
        </plugin>

        <!-- Pin the version of the maven shade plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>

        <!-- configure scala style -->
        <plugin>
          <groupId>org.scalastyle</groupId>
          <artifactId>scalastyle-maven-plugin</artifactId>
          <version>1.0.0</version>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <verbose>false</verbose>
            <failOnViolation>true</failOnViolation>
            <includeTestSourceDirectory>true</includeTestSourceDirectory>
            <failOnWarning>false</failOnWarning>
            <sourceDirectory>${basedir}/src/main/scala</sourceDirectory>
            <testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>
            <outputFile>${project.basedir}/target/scalastyle-output.xml</outputFile>
            <inputEncoding>UTF-8</inputEncoding>
            <outputEncoding>UTF-8</outputEncoding>
          </configuration>
        </plugin>

        <plugin>
          <!-- Inherited from Apache parent, but not actually used. Disable to reduce noise. -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <executions>
            <execution>
              <id>attach-descriptor</id>
              <phase>none</phase>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
